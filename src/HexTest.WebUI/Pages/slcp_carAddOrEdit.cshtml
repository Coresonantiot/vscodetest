@using HexTest.WebUI.Models;
@model slcp_car

<form id="create-form" method="post" asp-page="slcp_car" asp-route-id="@Model.Id" asp-page-handler="AddOrEdit" onsubmit="return jQueryModalPost(this);">  
    <p id="ErrorMessage" style="color:red;"></p>
    
    <div class="container">
        <div class="row">
        <div class="col-sm">
             <div class='form-group'><label for='recipient-name' class='col-form-label'>Colour<span style='color: red'>*</span></label><input type='text' autocomplete="off" asp-for="slcp_colour" class='form-control validate[required,minSize[1],maxSize[200]]' id='fld_slcp_car_slcp_colour'></div>
        </div>
        <div class="col-sm">
            <div class='form-group'><label for='recipient-name' class='col-form-label'>IsShipped</label><input type='text' autocomplete="off" asp-for="slcp_isshipped" class='form-control validate[minSize[1],maxSize[200]]' id='fld_slcp_car_slcp_isshipped'></div>
        </div>  
        
        
        </div>

         <h5 class="submodal-title">Add Engine</h5>
<div class="container">
    <div class="row">
    <div class="col-sm">
       <div class='form-group'><label for='recipient-name' class='col-form-label'>Engine Number<span style='color: red'>*</span></label><input type='text' autocomplete="off" asp-for="slcp_engine.slcp_engine_number" class='form-control validate[required,minSize[1],maxSize[200]]' id='fld_slcp_engine_slcp_engine_number'></div><div class='form-group'><label for='recipient-name' class='col-form-label'>Fuel Type</label><input type='text' autocomplete="off" asp-for="slcp_engine.slcp_fuel_type" class='form-control validate[minSize[1],maxSize[200]]' id='fld_slcp_engine_slcp_fuel_type'></div>
    </div>						    

    <div class="col-sm">
        <div class="col-sm">
        <div class='form-group'><label for='recipient-name' class='col-form-label'>Engine Type</label><input type='text' autocomplete="off" asp-for="slcp_engine.slcp_type" class='form-control validate[minSize[1],maxSize[200]]' id='fld_slcp_engine_slcp_type'></div>
        </div>

	    <input type='hidden' class='form-control' id='fld_PKIDslcp_engine' />
	    
                    
    </div>       
    </div>
						 
</div>
<h5 class="submodal-title">Add Wheel</h5>
<div class="container">
    <div class="row">
    <div class="col-sm">
       <div class='form-group'><label for='recipient-name' class='col-form-label'>Type<span style='color: red'>*</span></label><input type='text' autocomplete="off"  class='form-control validate[required,minSize[1],maxSize[200]]' id='fld_slcp_wheel_slcp_type'></div><div class='form-group'><label for='recipient-name' class='col-form-label'>Heat Resistance</label><input type='text' autocomplete="off"  class='form-control validate[minSize[1],maxSize[200]]' id='fld_slcp_wheel_slcp_heat_resistance'></div>
    </div>						    

    <div class="col-sm">
        <div class="col-sm">
        <div class='form-group'><label for='recipient-name' class='col-form-label'>Diameter</label><input type='text' autocomplete="off"  class='form-control validate[minSize[1],maxSize[200]]' id='fld_slcp_wheel_slcp_diameter'></div>
        </div>

	    <input type='hidden' class='form-control' id='fld_PKIDslcp_wheel' />
	    <button type="button" id='Addslcp_wheel'  class="btn btn-primary">Add</button>
        <button type="button" id='Editslcp_wheel'  class="btn btn-primary" style="display:none" onclick="Editslcp_wheelInstance()">Edit</button>
                    
    </div>       
    </div>
						 
</div>

			<table id="slcp_wheelTable" class="table table-bordered table-condensed table-striped">
			<thead>
				<tr>
				<th>Type</th><th>Diameter</th><th>Heat Resistance</th>
				<th></th>
				</tr>
			</thead>
			@if(Model.slcp_wheel != null)
            {
                <tbody>
                @foreach (var item in Model.slcp_wheel)
                {
                    <tr id= "slcp_wheel@(item.Id)">
                        <td>@Html.DisplayFor(modelItem => item.slcp_type)</td>
<td>@Html.DisplayFor(modelItem => item.slcp_diameter)</td>
<td>@Html.DisplayFor(modelItem => item.slcp_heat_resistance)</td>

                        <td class="text-center"><button class='btn btn-primary Edit' type="button" onclick="Getslcp_wheel(@item.Id)">Edit</button>   <button class= 'btn btn-primary Delete' type ="button" onclick="Deleteslcp_wheel(@item.Id)">Delete</button></td>
                        
                    </tr>
                }
                </tbody>
            }
			</table>

        <br />
        <div class="form-group justify-content-between" align="right">
            <button type="button" class="btn btn-secondary close-button" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary save-button">Save</button>
        </div>
    </div>
</form>


    <link href="~/vendor/validations/css/validationEngine.jquery.css" rel="stylesheet"/>

    <script src="~/vendor/validations/js/jquery.validationEngine-en.js"></script>
    <script src="~/vendor/validations/js/jquery.validationEngine.js"></script>
	<script src="~/vendor/validations/js/custom_validations.js"></script>

    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    
    <script type="text/javascript">
            
        var slcp_wheeldata;
		
        
        $(document).ready(function () {

            $("#create-form").validationEngine('attach', { maxErrorsPerField: 1, promptPosition: "bottomLeft" });

            var slcp_wheelrowIdx = 0;
			slcp_wheeldata = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.slcp_wheel)) ?? [];
			$('#Addslcp_wheel').on('click', function () {
				if (!$("#fld_slcp_wheel_slcp_type").validationEngine('validate') ||!$("#fld_slcp_wheel_slcp_diameter").validationEngine('validate') ||!$("#fld_slcp_wheel_slcp_heat_resistance").validationEngine('validate') ){
					return false;
				}
					if ($("#slcp_wheelTable tbody").length == 0) {
						$("#slcp_wheelTable").append("<tbody></tbody>");
					}
				$("#slcp_wheelTable tbody").append("<tr id=Row"+slcp_wheelrowIdx + ">" +
					"<td>" + $("#fld_slcp_wheel_slcp_type").val() + "</td>" +
					"<td>" + $("#fld_slcp_wheel_slcp_diameter").val() + "</td>" +
					"<td>" + $("#fld_slcp_wheel_slcp_heat_resistance").val() + "</td>" +
					"<td class=\"text-center\"><button class='btn btn-danger remove' type=\"button\" onclick=\"Removeslcp_wheel(" +slcp_wheelrowIdx + ")\">Remove</button></td>" +"</tr>");
					var entityJson = "{";
					entityJson += "\"rowid\":\"" +slcp_wheelrowIdx + "\",";
				entityJson += "\"slcp_type\":\"" + $("#fld_slcp_wheel_slcp_type").val() + "\",";
				entityJson += "\"slcp_diameter\":\"" + $("#fld_slcp_wheel_slcp_diameter").val() + "\",";
				entityJson += "\"slcp_heat_resistance\":\"" + $("#fld_slcp_wheel_slcp_heat_resistance").val() + "\",";
				entityJson += "}";
				slcp_wheeldata.push(JSON.parse(entityJson.slice(0,-2)  + "}"));
				$('#fld_slcp_wheel_slcp_type').val('');
				$('#fld_slcp_wheel_slcp_diameter').val('');
				$('#fld_slcp_wheel_slcp_heat_resistance').val('');
				++slcp_wheelrowIdx;
			});

                     
        });

        jQueryModalPost = form => {
            if(!$("#fld_slcp_car_slcp_colour").validationEngine('validate') ||!$("#fld_slcp_car_slcp_isshipped").validationEngine('validate') ){
				return false;
			}


            var data = new FormData(form);
               
            slcp_wheeldata.forEach((slcp_wheel,i) => {
					for (let key in slcp_wheel) {
						data.append('slcp_wheel[' + i + '].' + key,slcp_wheel[key]);
					}
				})
				

            try {
                $.ajax({
                    type: 'POST',
                    url: form.action,
                    data: data,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res.isValid) {
                            $('#form-modal').modal('hide');
                            location.reload();
                        }
                        else{
                            $('#ErrorMessage').text(" ");
                            var errors = res.errors;
                            errors.forEach((element, index, array) => {
                                $('#ErrorMessage').append(element.propertyName + ":" + element.errorMessage + " <br> ");
                            });
                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                })
                return false;
            } catch (ex) {
                console.log(ex)
            }
        }

        function Getslcp_wheel(id) {
			var obj = slcp_wheeldata.filter(obj => { return obj.Id === id })
			$("#fld_PKIDslcp_wheel").val(obj[0].Id);
			$("#fld_slcp_wheel_slcp_type").val(obj[0].slcp_type);
			$("#fld_slcp_wheel_slcp_diameter").val(obj[0].slcp_diameter);
			$("#fld_slcp_wheel_slcp_heat_resistance").val(obj[0].slcp_heat_resistance);
			$("#Addslcp_wheel").hide();
			$("#Editslcp_wheel").show();
		}


        function Editslcp_wheelInstance() {
				if (!$("#fld_slcp_wheel_slcp_type").validationEngine('validate') ||!$("#fld_slcp_wheel_slcp_diameter").validationEngine('validate') ||!$("#fld_slcp_wheel_slcp_heat_resistance").validationEngine('validate') ){
					return false;
				}
				var foundIndex = slcp_wheeldata.findIndex(x => x.Id == $("#fld_PKIDslcp_wheel").val());
				var row = $("#slcp_wheelTable [id='slcp_wheel" + $("#fld_PKIDslcp_wheel").val() + "']");
				slcp_wheeldata[foundIndex].slcp_type = $("#fld_slcp_wheel_slcp_type").val();
				row.children().eq(0).text($("#fld_slcp_wheel_slcp_type").val());
				slcp_wheeldata[foundIndex].slcp_diameter = $("#fld_slcp_wheel_slcp_diameter").val();
				row.children().eq(1).text($("#fld_slcp_wheel_slcp_diameter").val());
				slcp_wheeldata[foundIndex].slcp_heat_resistance = $("#fld_slcp_wheel_slcp_heat_resistance").val();
				row.children().eq(2).text($("#fld_slcp_wheel_slcp_heat_resistance").val());
				$('#fld_slcp_wheel_slcp_type').val('');
				$('#fld_slcp_wheel_slcp_diameter').val('');
				$('#fld_slcp_wheel_slcp_heat_resistance').val('');
				$("#Addslcp_wheel").show();
				$("#Editslcp_wheel").hide();

				}

        function Removeslcp_wheel(id) {
			$('#Row' + id).remove();
			slcp_wheeldata = slcp_wheeldata.filter(p => p.rowid != id);
		}

        //<AJAXAUTOCOMPLETE-FUNCTION-PLACEHOLDER>

    </script>
